# docker hosted nginx reverse proxy configuration, using nexus.
server  {
    listen  80;
    server_name registry.myhost.example www.registry.myhost.example;
    return 301 https://registry.myhost.example;
        }

server  {
    listen  443 ssl;
    server_name registry.myhost.example;


location /      {
        proxy_pass http://192.168.21.10:8082;
        proxy_cache_bypass      $http_upgrade;

        # proxy headers
        proxy_set_header Upgrade        "upgrade";
        proxy_set_header Connection     "upgrade";
        proxy_set_header HOST $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        # proxy timeouts
        proxy_connect_timeout   60s;
        proxy_send_timeout      60s;
        proxy_read_timeout      60s;

        # logs
        access_log      /var/log/nginx/registry_myhost.log;
        error_log       /var/log/nginx/registry_myhost_error.log;
        error_page 500 502 503 504 /50x.html;
                }

        # ssl
        ssl_session_timeout 180m;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_certificate /etc/ssl/cert.pem;
        ssl_certificate_key /etc/ssl/key.pem;

        }
